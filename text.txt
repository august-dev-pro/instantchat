  <div className="discussion_show">
                <div className="contact">
                  <div className="profil_pic">
                    <div className="picture">
                      <Image
                        src={"/images/contacts/maes.jpeg"}
                        alt="profil"
                        height={500}
                        width={500}
                      />
                    </div>
                  </div>
                  <div className="name_phone_status">
                    <div className="name_phone">
                      <div className="name">
                        {selectedDiscutContact.userName}
                      </div>
                      <div className="phone">
                        phone: {selectedDiscutContact.phone}
                      </div>
                    </div>
                    <div className="status">
                      {selectedDiscutContact.status}
                      <FontAwesomeIcon
                        className="icon"
                        icon={isContactConnected ? faCircle : faTimesCircle}
                        style={{ color: isContactConnected ? "green" : "red" }}
                      />
                    </div>
                  </div>
                </div>
                <div className="discussion_block">
                  <div className="discussion">
                    <div className="discussion_content">
                      {isLoaded
                        ? "chargement ..."
                        : Object.values(selectedDiscut.messages).map(
                            (message: any, index: number) => (
                              <div
                                className={`message  ${
                                  message.senderId === user.uid
                                    ? "sent"
                                    : message.senderId === "system"
                                    ? "system-message"
                                    : "received"
                                }`}
                                key={index}
                              >
                                <div className="message_text">
                                  {message.content}
                                  <div className="time-readed">
                                    {message.senderId === user.uid && (
                                      <div
                                        className={`readed ${
                                          message.read ? "read" : ""
                                        }`}
                                      >
                                        <FontAwesomeIcon icon={faCheck} />
                                        <FontAwesomeIcon
                                          className="deplace"
                                          icon={faCheck}
                                        />
                                      </div>
                                    )}
                                    <div className="time">
                                      {reduceMessage(
                                        message.writeTime,
                                        5,
                                        true
                                      )}
                                    </div>
                                  </div>
                                </div>
                              </div>
                            )
                          )}
                    </div>
                  </div>
                  <div className="message-input">
                    <div className="emojit" onClick={openEmojiModal}>
                      <label>
                        <FontAwesomeIcon icon={faSmile} />
                      </label>
                    </div>
                    <SendFile />
                    {emojiModalOpen && <EmojiModal emojiClick={emojiClick} />}
                    {/* Zone de saisie de message */}
                    <div className="espace-send">
                      <textarea
                        className="input"
                        ref={textareaRef}
                        value={message}
                        onChange={handleMessageInputChange}
                        placeholder="Tapez votre message ici..."
                      ></textarea>
                      {message != "" && (
                        <div
                          className="send-btn"
                          onClick={() => {
                            handleSendMessage(
                              user.uid,
                              message,
                              selectedDiscut.id
                            );
                            //setMessageInput("");
                          }}
                        >
                          <FontAwesomeIcon icon={faPaperPlane} />
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>


 .discussion_show {

                .contact {
                    padding-left: 0 !important;

                    .back_action {
                        padding: 0 7px;
                        transition: all .3s;
                    }

                    .back_action:hover {
                        color: #06938b;
                    }

                    .name {
                        letter-spacing: 2px !important;
                    }

                    .phone {
                        font-size: 15px;
                    }
                }

                .discussion_block {
                    height: 100%;
                    display: grid;

                    grid-template-rows: 1fr auto; // La taille de .discuss sera ajust√©e automatiquement pour prendre tout l'espace disponible

                    .discussion {
                        //background-color: #303df1;
                        padding: 0 10px;

                        .discussion_content {
                            padding: 20px 0;
                            display: flex;
                            flex-direction: column;
                            gap: 5px;
                            //overflow-y: auto;
                            //white-space: nowrap;
                            max-height: 450px;
                            overflow-y: auto;
                            scrollbar-width: none;
                            -ms-overflow-style: none;

                            .message {
                                .message_text {
                                    padding: 10px;
                                    border-radius: 1rem;
                                    font-weight: 300;
                                    max-width: 70% !important;

                                }
                            }

                            .message.received {
                                //background-color: #ff0000;
                                display: flex;
                                justify-content: left;

                                .message_text {
                                    border-top-left-radius: 0;
                                    background-color: #2d404d;
                                    //                                   text-align: center;
                                }
                            }

                            .message.sent {
                                //background-color: #0077ff;
                                display: flex;
                                justify-content: right;

                                .message_text {
                                    border-bottom-right-radius: 0;
                                    //                                    text-align: right;
                                    background-color: #06938c67;
                                }
                            }
                        }
                    }

                    .message-input {
                        padding: 5px 20px;
                        display: flex;
                        flex-direction: column;
                        //align-items: center;
                        //height: 50px;
                        //position: relative;
                        // background-color: #ad0847;
                        align-items: flex-end;

                        .emoji {
                            display: flex;
                            //justify-content: center;
                            align-items: center;
                            //height: 60px;
                            //position: absolute;
                            padding: 15px 0;
                            cursor: pointer;
                        }

                        .espace-send {
                            display: grid;
                            grid-template-columns: 1fr 45px;
                            align-items: center;
                            border: 1px solid #06938b;

                            .input {

                                //width: 100%;
                                //height: 10px !important;
                                //background-color: #06938b;
                                max-height: 100px;
                                min-height: 40px !important;
                                height: 40px;
                                overflow-y: auto;
                                //white-space: nowrap;
                                overflow-y: scroll;
                                scrollbar-width: none;
                                -ms-overflow-style: none;
                                resize: none;
                                align-items: center;
                                padding: 5px;
                                padding-left: 10px;
                                //border: 1px solid #06938b;
                                border: none;
                                background-color: inherit;
                                color: #fff;
                                font-weight: 200;

                                &:focus {
                                    outline: none;
                                }

                                .container {}

                                .container::-webkit-scrollbar {
                                    width: 0;
                                    /* Largeur de la barre de d√©filement WebKit √† z√©ro */
                                    height: 0;
                                    /* Hauteur de la barre de d√©filement WebKit √† z√©ro */
                                }


                            }

                            .send-btn {
                                cursor: pointer;
                                // display: flex;
                                display: flex;
                                height: fit-content;
                                align-items: center;
                                justify-content: center;
                                //flex-direction: column;
                                //justify-content: flex-end !important;
                                //align-items: flex-end;
                                //height: min-content;
                                //padding: 15px 0;
                            }
                        }

                    }
                }
            }
